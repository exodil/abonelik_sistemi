package com.example.abonekaptanmobile.data.local.entity

import androidx.room.Entity
import androidx.room.Index
import androidx.room.PrimaryKey

@Entity(
    tableName = "user_subscriptions",
    indices = [
        Index(value = ["serviceName", "userId"], unique = true) // Composite index to ensure uniqueness per user per service.
    ]
)
/**
 * Represents a user's subscription record in the local database.
 * This entity stores details about a specific subscription, its status, relevant dates,
 * and linkage to processing information.
 *
 * Turkish: Kullanıcının yerel veritabanındaki abonelik kaydını temsil eder.
 * Bu varlık, belirli bir abonelikle ilgili ayrıntıları, durumunu, ilgili tarihleri
 * ve işleme bilgileriyle bağlantısını saklar.
 */
data class UserSubscriptionEntity(
    /**
     * Unique identifier for the subscription record. Auto-generated by Room.
     * Turkish: Abonelik kaydı için benzersiz tanımlayıcı. Room tarafından otomatik olarak oluşturulur.
     */
    @PrimaryKey(autoGenerate = true) val id: Long = 0,

    /**
     * The name of the subscribed service (e.g., "Netflix", "Spotify").
     * Turkish: Abone olunan servisin adı (örneğin, "Netflix", "Spotify").
     */
    val serviceName: String,

    /**
     * Optional user identifier. This can be used in multi-user contexts or if subscriptions
     * need to be associated with a specific user account within the app. Nullable if not applicable.
     * Turkish: İsteğe bağlı kullanıcı tanımlayıcısı. Bu, çok kullanıcılı bağlamlarda veya aboneliklerin
     * uygulama içinde belirli bir kullanıcı hesabıyla ilişkilendirilmesi gerektiğinde kullanılabilir.
     * Uygulanabilir değilse null olabilir.
     */
    val userId: String?,

    /**
     * The date when the subscription started, stored as a Unix timestamp (milliseconds since epoch).
     * Turkish: Aboneliğin başladığı tarih, Unix zaman damgası (milisaniye cinsinden) olarak saklanır.
     */
    val subscriptionStartDate: Long,

    /**
     * The date when the subscription ended or is expected to end, as a Unix timestamp.
     * Nullable if the subscription is active or the end date is unknown/not applicable (e.g., lifetime).
     * Turkish: Aboneliğin sona erdiği veya sona ermesi beklenen tarih, Unix zaman damgası olarak.
     * Abonelik aktifse veya bitiş tarihi bilinmiyorsa/uygulanamazsa (örneğin, ömür boyu) null olabilir.
     */
    var subscriptionEndDate: Long? = null,

    /**
     * Current status of the subscription. Expected values are "ACTIVE" or "CANCELLED".
     * Turkish: Aboneliğin mevcut durumu. Beklenen değerler "ACTIVE" veya "CANCELLED" şeklindedir.
     */
    var status: String,

    /**
     * Identifier of the last email that was processed to determine the current state of this subscription record.
     * Useful for debugging and tracking the source of the latest update.
     * Turkish: Bu abonelik kaydının mevcut durumunu belirlemek için işlenen son e-postanın tanımlayıcısı.
     * Hata ayıklama ve en son güncellemenin kaynağını izleme için kullanışlıdır.
     */
    var lastEmailIdProcessed: String,

    /**
     * The date of the last email or event that confirmed the subscription as active, as a Unix timestamp.
     * This helps in understanding the freshness of the "ACTIVE" status.
     * Turkish: Aboneliğin aktif olduğunu teyit eden son e-postanın veya olayın tarihi, Unix zaman damgası olarak.
     * Bu, "ACTIVE" durumunun güncelliğini anlamaya yardımcı olur.
     */
    var lastActiveConfirmationDate: Long,

    /**
     * Timestamp (milliseconds since epoch) indicating when this subscription record was first created in the database.
     * Defaults to the current system time upon object creation if not specified.
     * Turkish: Bu abonelik kaydının veritabanında ilk oluşturulduğu zamanı gösteren zaman damgası (milisaniye cinsinden).
     * Belirtilmezse, nesne oluşturulduğunda varsayılan olarak mevcut sistem zamanına ayarlanır.
     */
    val createdAt: Long = System.currentTimeMillis(),

    /**
     * Timestamp (milliseconds since epoch) indicating when this subscription record was last updated.
     * Defaults to the current system time upon object creation and should be updated on any modification.
     * Turkish: Bu abonelik kaydının en son güncellendiği zamanı gösteren zaman damgası (milisaniye cinsinden).
     * Nesne oluşturulduğunda varsayılan olarak mevcut sistem zamanına ayarlanır ve herhangi bir değişiklikte güncellenmelidir.
     */
    var updatedAt: Long = System.currentTimeMillis()
)
